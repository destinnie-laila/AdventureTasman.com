{"ast":null,"code":"var _jsxFileName = \"/Users/destinnielaila/M1/CLIENT/src/Views/LoginContext.jsx\";\nimport React, { useContext } from 'react';\nimport { useImmerReducer } from 'use-immer';\nimport { login, storeComment } from '../Components/utils';\nimport Container from \"react-bootstrap/Container\"; // import { ExampleComponent } from './ExampleStyle';\n\nfunction loginReducer(draft, action) {\n  switch (action.type) {\n    case 'field':\n      {\n        draft[action.fieldName] = action.payload;\n        return;\n      }\n\n    case 'login':\n      {\n        draft.error = '';\n        draft.isLoading = true;\n        return;\n      }\n\n    case 'success':\n      {\n        draft.isLoggedIn = true;\n        draft.isLoading = false; //draft.username = '';\n\n        draft.password = '';\n        return;\n      }\n\n    case 'error':\n      {\n        draft.error = 'Incorrect username or password!';\n        draft.isLoggedIn = false;\n        draft.isLoading = false;\n        draft.username = '';\n        draft.password = '';\n        return;\n      }\n\n    case 'logOut':\n      {\n        draft.isLoggedIn = false;\n        return;\n      }\n    // case 'toggleTodoCompleted': {\n    //   const todo = draft.todos.find((item) => item.title === action.payload);\n    //   todo.completed = !todo.completed;\n    //   return;\n    // }\n\n    case 'comment':\n      {\n        draft.error = '';\n        draft.isLoading = true;\n        return;\n      }\n\n    default:\n      return;\n  }\n} // const todos = [\n//   {\n//     title: 'Get milk',\n//     // completed: true,\n//   },\n//   {\n//     title: 'Make YouTube video',\n//     completed: false,\n//   },\n//   {\n//     title: 'Write blog post',\n//     completed: false,\n//   },\n// ];\n\n\nconst initialState = {\n  username: '',\n  password: '',\n  isLoading: false,\n  error: '',\n  isLoggedIn: false // todos,\n\n};\nconst StateContext = React.createContext();\nconst DispatchContext = React.createContext();\nexport default function LoginUseContext() {\n  const [state, dispatch] = useImmerReducer(loginReducer, initialState);\n  const {\n    username,\n    password,\n    isLoading,\n    error,\n    isLoggedIn,\n    todos\n  } = state;\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    dispatch({\n      type: 'login'\n    });\n\n    try {\n      await login({\n        username,\n        password\n      }); // <<< HERE WE CONNECT UP TO THE API CALL IN util.js\n\n      dispatch({\n        type: 'success'\n      });\n    } catch (error) {\n      dispatch({\n        type: 'error'\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DispatchContext.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StateContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App useContext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-login-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, isLoggedIn ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Welcome \", username, \"!\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'logOut'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Log Out\"), /*#__PURE__*/React.createElement(TodoPage, {\n    todos: todos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \" \", error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 27\n    }\n  }, error), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"Please Login!\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"username\",\n    value: username,\n    onChange: e => dispatch({\n      type: 'field',\n      fieldName: 'username',\n      payload: e.currentTarget.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"password\",\n    autoComplete: \"new-password\",\n    value: password,\n    onChange: e => dispatch({\n      type: 'field',\n      fieldName: 'password',\n      payload: e.currentTarget.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit\",\n    type: \"submit\",\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, isLoading ? 'Logging in...' : 'Log In'))))))));\n} // Comments stuff ====\n\nfunction TodoPage({\n  todos\n}) {\n  // return (\n\n  /*#__PURE__*/\n  React.createElement(\"div\", {\n    className: \"todoContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, \"Comments\")); // );\n} // function TodoItem({ title, completed }) {\n\n\nconst dispatch = useContext(DispatchContext);\nconst state = useContext(StateContext);\nconst {\n  username,\n  comment,\n  isLoading,\n  error,\n  isLoggedIn\n} = state; //const isLoggedIn = true;\n\nconst onSubmitComment = async e => {\n  e.preventDefault();\n  dispatch({\n    type: 'comment'\n  });\n\n  try {\n    alert('Calling api to store the comment , commment is' + comment);\n    await storeComment(username, comment); // <<< HERE WE CONNECT UP TO THE API CALL IN util.js\n\n    dispatch({\n      type: 'success'\n    });\n  } catch (error) {\n    dispatch({\n      type: 'error'\n    });\n  }\n}; // return (\n//   <div className='todoItem'>\n//    <p>{title}</p>\n//     <div>\n//       <input\n//         type='checkbox'\n//         checked={completed}\n//         onClick={() => {\n//           if (!isLoggedIn) {\n//             alert('Please login to click this!');\n//           }\n//         }}\n//         onChange={() => {\n//           if (isLoggedIn) {\n//             dispatch({ type: 'toggleTodoCompleted', payload: title });\n//           }\n//         }}\n//       />\n// </div>\n// <div>\n\n\n/*#__PURE__*/\nReact.createElement(\"form\", {\n  className: \"form\",\n  onSubmit: onSubmitComment,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 7\n  }\n}, \" \", error && /*#__PURE__*/React.createElement(\"p\", {\n  className: \"error\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 27\n  }\n}, error), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 17\n  }\n}, \"Enter Comment\"), /*#__PURE__*/React.createElement(\"input\", {\n  type: \"hidden\",\n  placeholder: \"username\",\n  value: username,\n  onChange: e => dispatch({\n    type: 'field',\n    fieldName: 'username',\n    payload: e.currentTarget.value\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(\"input\", {\n  type: \"text\",\n  placeholder: \"comment\",\n  value: comment,\n  onChange: e => dispatch({\n    type: 'field',\n    fieldName: 'comment',\n    payload: e.currentTarget.value\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(\"button\", {\n  className: \"submit\",\n  type: \"submit\",\n  disabled: isLoading,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 17\n  }\n}, isLoading ? 'Logging in...' : 'Save')); //   </div>\n// </div>\n//   );\n// }","map":{"version":3,"sources":["/Users/destinnielaila/M1/CLIENT/src/Views/LoginContext.jsx"],"names":["React","useContext","useImmerReducer","login","storeComment","Container","loginReducer","draft","action","type","fieldName","payload","error","isLoading","isLoggedIn","password","username","initialState","StateContext","createContext","DispatchContext","LoginUseContext","state","dispatch","todos","onSubmit","e","preventDefault","currentTarget","value","TodoPage","comment","onSubmitComment","alert"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { useImmerReducer } from 'use-immer';\nimport { login, storeComment } from '../Components/utils';\nimport Container from \"react-bootstrap/Container\";\n// import { ExampleComponent } from './ExampleStyle';\n\nfunction loginReducer(draft, action) {\n  switch (action.type) {\n    case 'field': {\n      draft[action.fieldName] = action.payload;\n      return;\n    }\n    case 'login': {\n      draft.error = '';\n      draft.isLoading = true;\n      return;\n    }\n    case 'success': {\n      draft.isLoggedIn = true;\n      draft.isLoading = false;\n      //draft.username = '';\n      draft.password = '';\n      return;\n    }\n    case 'error': {\n      draft.error = 'Incorrect username or password!';\n      draft.isLoggedIn = false;\n      draft.isLoading = false;\n      draft.username = '';\n      draft.password = '';\n      return;\n    }\n    case 'logOut': {\n      draft.isLoggedIn = false;\n      return;\n    }\n    // case 'toggleTodoCompleted': {\n    //   const todo = draft.todos.find((item) => item.title === action.payload);\n    //   todo.completed = !todo.completed;\n    //   return;\n    // }\n    case 'comment':{\n        draft.error = '';\n        draft.isLoading = true;\n        return;\n    }\n    default:\n      return;\n  }\n}\n\n// const todos = [\n//   {\n//     title: 'Get milk',\n//     // completed: true,\n//   },\n//   {\n//     title: 'Make YouTube video',\n//     completed: false,\n//   },\n//   {\n//     title: 'Write blog post',\n//     completed: false,\n//   },\n// ];\n\nconst initialState = {\n  username: '',\n  password: '',\n  isLoading: false,\n  error: '',\n  isLoggedIn: false,\n  // todos,\n};\n\nconst StateContext = React.createContext();\nconst DispatchContext = React.createContext();\n\nexport default function LoginUseContext() {\n  const [state, dispatch] = useImmerReducer(loginReducer, initialState);\n  const { username, password, isLoading, error, isLoggedIn, todos } = state;\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    dispatch({ type: 'login' });\n\n    try {\n      await login({ username, password }); // <<< HERE WE CONNECT UP TO THE API CALL IN util.js\n      dispatch({ type: 'success' });\n    } catch (error) {\n      dispatch({ type: 'error' });\n    }\n  };\n\n\n  return (\n    <div>  \n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>\n        <div className='App useContext'>\n\t {/* <ExampleComponent />} */}\n   <Container>\n          <div className='container-login-2'>  \n            {isLoggedIn ? (\n              <>\n                <h1>Welcome {username}!</h1>\n                <button onClick={() => dispatch({ type: 'logOut' })}>\n                  Log Out\n                </button>          \n                <TodoPage todos={todos} />\n\n              </>\n            ) : (\n              <form className='form' onSubmit={onSubmit}> {/* HERE THE onSubmit is set up !!*/ }\n                {error && <p className='error'>{error}</p>}\n                <p>Please Login!</p>\n                <input\n                  type='text'\n                  placeholder='username'\n                  value={username}\n                  onChange={(e) =>\n                    dispatch({\n                      type: 'field',\n                      fieldName: 'username',\n                      payload: e.currentTarget.value,\n                    })\n                  }\n                />\n                <input\n                  type='password'\n                  placeholder='password'\n                  autoComplete='new-password'\n                  value={password}\n                  onChange={(e) =>\n                    dispatch({\n                      type: 'field',\n                      fieldName: 'password',\n                      payload: e.currentTarget.value,\n                    })\n                  }\n                />\n                <button className='submit' type='submit' disabled={isLoading}>\n                  {isLoading ? 'Logging in...' : 'Log In'}\n                </button>\n              </form>\n            )}\n          </div>\n          </Container>\n\n        </div>\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n   </div> \n  );\n}\n\n\n// Comments stuff ====\nfunction TodoPage({ todos }) {\n  // return (\n    <div className='todoContainer'>\n      <h2>Comments</h2>\n      {/* {todos.map((item) => (\n        <TodoItem key={item.title} {...item} />\n      ))} */}\n    </div>\n  // );\n}\n\n// function TodoItem({ title, completed }) {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const   { username, comment, isLoading, error, isLoggedIn } = state;\n  //const isLoggedIn = true;\n\n  const onSubmitComment = async (e) => {\n    e.preventDefault();\n\n    dispatch({ type: 'comment' });\n\n    try {  \n      alert('Calling api to store the comment , commment is' + comment);\n      await storeComment(username, comment ); // <<< HERE WE CONNECT UP TO THE API CALL IN util.js\n      dispatch({ type: 'success' });\n    } catch (error) {\n      dispatch({ type: 'error' });\n    }\n  };\n  // return (\n  //   <div className='todoItem'>\n  //    <p>{title}</p>\n  //     <div>\n  //       <input\n  //         type='checkbox'\n  //         checked={completed}\n  //         onClick={() => {\n  //           if (!isLoggedIn) {\n  //             alert('Please login to click this!');\n  //           }\n  //         }}\n  //         onChange={() => {\n  //           if (isLoggedIn) {\n  //             dispatch({ type: 'toggleTodoCompleted', payload: title });\n  //           }\n  //         }}\n  //       />\n      // </div>\n      // <div>\n      <form className='form' onSubmit={onSubmitComment}> {/* HERE THE onSubmiComment is set up !!*/ }\n                {error && <p className='error'>{error}</p>}\n                <p>Enter Comment</p>\n                <input\n                  type='hidden'\n                  placeholder='username'\n                  value={username}\n                  onChange={(e) =>\n                    dispatch({\n                      type: 'field',\n                      fieldName: 'username',\n                      payload: e.currentTarget.value,\n                    })\n                  }\n                />\n                <input\n                  type='text'\n                  placeholder='comment'\n                  value={comment}\n                  onChange={(e) =>\n                    dispatch({\n                      type: 'field',\n                      fieldName: 'comment',\n                      payload: e.currentTarget.value,\n                    })\n                  }\n                />\n                <button className='submit' type='submit' disabled={isLoading}>\n                  {isLoading ? 'Logging in...' : 'Save'}\n                </button>\n              </form>\n    //   </div>\n    // </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}